{"ast":null,"code":"import { ElementRef, EventEmitter, QueryList } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ApiService } from '../../shared/api.service';\nimport { Game } from '../../shared/game.model';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/api.service\";\nimport * as i3 from \"ngx-bootstrap/modal\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"angular-bootstrap-md\";\nconst _c0 = [\"editGameModal\"];\nconst _c1 = [\"categoryBoxes\"];\n\nfunction EditGameModalComponent_div_2_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const developer_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", developer_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", developer_r4.name, \" \");\n  }\n}\n\nfunction EditGameModalComponent_div_2_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"input\", 40);\n    i0.ɵɵlistener(\"change\", function EditGameModalComponent_div_2_div_48_Template_input_change_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const category_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.onChange(category_r5.id, $event.target.checked);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 41);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const category_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"checked\", ctx_r3.checkedList[i_r6])(\"id\", \"category\" + category_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", \"category\" + category_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r5.name);\n  }\n}\n\nfunction EditGameModalComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"h4\", 6);\n    i0.ɵɵtext(4, \"Edit Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function EditGameModalComponent_div_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.modal.hide();\n    });\n    i0.ɵɵelement(6, \"i\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function EditGameModalComponent_div_2_Template_form_ngSubmit_8_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.editGame();\n    });\n    i0.ɵɵelementStart(9, \"label\", 11);\n    i0.ɵɵtext(10, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 12);\n    i0.ɵɵelementStart(12, \"label\", 13);\n    i0.ɵɵtext(13, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 14);\n    i0.ɵɵelementStart(15, \"label\", 15);\n    i0.ɵɵtext(16, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 16);\n    i0.ɵɵelementStart(18, \"label\", 17);\n    i0.ɵɵtext(19, \"Min. Req.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 18);\n    i0.ɵɵelementStart(21, \"label\", 19);\n    i0.ɵɵtext(22, \"Rec. Req.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 20);\n    i0.ɵɵelementStart(24, \"label\", 21);\n    i0.ɵɵtext(25, \"Platform\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"select\", 22)(27, \"option\", 23);\n    i0.ɵɵtext(28, \"PC\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"option\", 24);\n    i0.ɵɵtext(30, \"Nintendo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"option\", 25);\n    i0.ɵɵtext(32, \"PS\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"option\", 26);\n    i0.ɵɵtext(34, \"Xbox\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"label\", 27);\n    i0.ɵɵtext(36, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"input\", 28);\n    i0.ɵɵelementStart(38, \"label\", 29);\n    i0.ɵɵtext(39, \"Banner\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"input\", 30);\n    i0.ɵɵelementStart(41, \"label\", 31);\n    i0.ɵɵtext(42, \"Sale\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(43, \"input\", 32);\n    i0.ɵɵelementStart(44, \"label\", 33);\n    i0.ɵɵtext(45, \"Developer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 34);\n    i0.ɵɵtemplate(47, EditGameModalComponent_div_2_option_47_Template, 2, 2, \"option\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(48, EditGameModalComponent_div_2_div_48_Template, 4, 4, \"div\", 36);\n    i0.ɵɵelementStart(49, \"button\", 37);\n    i0.ɵɵtext(50, \"Edit\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editGameForm);\n    i0.ɵɵadvance(39);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.developers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.categories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.editGameForm.valid || ctx_r1.editGameForm.pristine);\n  }\n}\n\nexport let EditGameModalComponent = /*#__PURE__*/(() => {\n  class EditGameModalComponent {\n    constructor(fb, api) {\n      this.fb = fb;\n      this.api = api;\n      this.change = new EventEmitter();\n      this.currentGame = new Game();\n      this.developers = [];\n      this.categories = [];\n      this.checkedList = [];\n    }\n\n    show(id) {\n      this.modal.show();\n      this.getCategories();\n      this.getDevelopers();\n      this.api.getGame(id).subscribe(data => {\n        this.currentGame = data;\n        this.currentGame.id = id;\n        this.initializeForm(this.currentGame);\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    getDevelopers() {\n      this.api.getDevelopers().subscribe(data => {\n        this.developers = data;\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    getCategories() {\n      this.api.getCategories().subscribe(data => {\n        this.categories = data;\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    initializeForm(currentGame) {\n      this.editGameForm = this.fb.group({\n        name: [currentGame.name, Validators.required],\n        price: [currentGame.price, Validators.required],\n        description: [currentGame.description, Validators.required],\n        minReq: [currentGame.minReq, Validators.required],\n        recReq: [currentGame.recReq, Validators.required],\n        platform: [currentGame.platform, Validators.required],\n        imgLink: [currentGame.imgLink, Validators.required],\n        banLink: [currentGame.banLink, Validators.required],\n        sale: [currentGame.sale, Validators.required],\n        developerId: [currentGame.developerId, Validators.required],\n        categoryId: this.fb.array([])\n      });\n      this.checkedList = new Array(this.categories.length).fill(false);\n      const categoriesInit = this.editGameForm.controls.categoryId;\n      console.log(currentGame.categoryId);\n      currentGame.categoryId.forEach(id => {\n        this.checkedList[id] = true;\n        console.log(id);\n        categoriesInit.push(new FormControl(id));\n      });\n    }\n\n    onChange(id, isChecked) {\n      this.editGameForm.markAsDirty();\n      const categoriesChange = this.editGameForm.controls.categoryId;\n\n      if (isChecked) {\n        categoriesChange.push(new FormControl(id));\n      } else {\n        const index = categoriesChange.controls.findIndex(x => x.value === id);\n        categoriesChange.removeAt(index);\n      }\n    }\n\n    editGame() {\n      const editedGame = new Game({\n        id: this.currentGame.id,\n        name: this.editGameForm.value.name,\n        price: this.editGameForm.value.price,\n        description: this.editGameForm.value.description,\n        minReq: this.editGameForm.value.minReq,\n        recReq: this.editGameForm.value.recReq,\n        platform: this.editGameForm.value.platform,\n        imgLink: this.editGameForm.value.imgLink,\n        banLink: this.editGameForm.value.banLink,\n        sale: this.editGameForm.value.sale,\n        developerId: this.editGameForm.value.developerId,\n        categoryId: this.transformInNumberArray(this.editGameForm.value.categoryId)\n      });\n      this.api.editGame(editedGame).subscribe(() => {\n        this.change.emit('game');\n        this.modal.hide();\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    transformInNumberArray(string) {\n      return JSON.parse('[' + string + ']');\n    }\n\n  }\n\n  EditGameModalComponent.ɵfac = function EditGameModalComponent_Factory(t) {\n    return new (t || EditGameModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  EditGameModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditGameModalComponent,\n    selectors: [[\"app-edit-game-modal\"]],\n    viewQuery: function EditGameModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boxes = _t);\n      }\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"editGameModal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", 3, \"onHide\"], [\"editGameModal\", \"bs-modal\"], [\"id\", \"bigDiv\", \"class\", \"modal-dialog\", \"role\", \"document\", 4, \"ngIf\"], [\"id\", \"bigDiv\", \"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\", 2, \"background-color\", \"black\"], [1, \"modal-header\", 2, \"background-color\", \"black\"], [\"id\", \"myModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"close\", 3, \"click\"], [1, \"fa-solid\", \"fa-x\"], [1, \"modal-body\"], [1, \"text-center\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"formControlName\", \"price\", 1, \"form-control\", \"mb-4\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"minReq\"], [\"type\", \"text\", \"id\", \"minReq\", \"formControlName\", \"minReq\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"recReq\"], [\"type\", \"text\", \"id\", \"recReq\", \"formControlName\", \"recReq\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"platform\"], [\"id\", \"platform\", \"formControlName\", \"platform\", \"autocomplete\", \"off\", 1, \"form-select\", \"mb-4\"], [\"value\", \"PC\"], [\"value\", \"Nintendo\"], [\"value\", \"PS\"], [\"value\", \"Xbox\"], [\"for\", \"imgLink\"], [\"type\", \"text\", \"id\", \"imgLink\", \"formControlName\", \"imgLink\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"banLink\"], [\"type\", \"text\", \"id\", \"banLink\", \"formControlName\", \"banLink\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"sale\"], [\"type\", \"number\", \"id\", \"sale\", \"formControlName\", \"sale\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"developerId\"], [\"id\", \"developerId\", \"formControlName\", \"developerId\", \"autocomplete\", \"off\", 1, \"form-select\", \"mb-4\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-check form-check-inline\", 4, \"ngFor\", \"ngForOf\"], [\"mdbBtn\", \"\", \"block\", \"true\", \"type\", \"submit\", 1, \"my-4\", 3, \"disabled\"], [3, \"ngValue\"], [1, \"form-check\", \"form-check-inline\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"change\"], [1, \"form-check-label\"]],\n    template: function EditGameModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onHide\", function EditGameModalComponent_Template_div_onHide_0_listener() {\n          return ctx.editGameForm.reset();\n        });\n        i0.ɵɵtemplate(2, EditGameModalComponent_div_2_Template, 51, 4, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editGameForm);\n      }\n    },\n    directives: [i3.ModalDirective, i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i4.NgForOf, i5.MdbBtnDirective],\n    styles: [\"*[_ngcontent-%COMP%]{color:#50b9ff}.login-form[_ngcontent-%COMP%]{width:340px;margin:50px auto;font-size:15px}.login-form[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin-bottom:15px}.form-control[_ngcontent-%COMP%], .btn[_ngcontent-%COMP%]{min-height:38px;border-radius:2px}.btn[_ngcontent-%COMP%]{font-size:15px;font-weight:700;background-color:#50b9ff;color:#000;border:none}#bigDiv[_ngcontent-%COMP%]{border:3px solid rgb(80,185,255);border-radius:10px;box-shadow:0 0 50px #50b9ff}.modal-header[_ngcontent-%COMP%]{border-bottom-color:#50b9ff}\"]\n  });\n  return EditGameModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}