{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../../shared/api.service';\nimport { User } from '../../shared/user.model';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/api.service\";\nconst _c0 = [\"editUserModal\"];\n\nfunction EditUserModalComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function EditUserModalComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.editUser();\n    });\n    i0.ɵɵelementStart(2, \"p\", 5);\n    i0.ɵɵtext(3, \"Edit User\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementStart(7, \"label\", 8);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵelementStart(10, \"label\", 10);\n    i0.ɵɵtext(11, \"State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 11);\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editUserForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.editUserForm.valid || ctx_r1.editUserForm.pristine);\n  }\n}\n\nexport let EditUserModalComponent = /*#__PURE__*/(() => {\n  class EditUserModalComponent {\n    constructor(fb, api) {\n      this.fb = fb;\n      this.api = api;\n      this.change = new EventEmitter();\n      this.currentUser = new User();\n    }\n\n    show(id) {\n      this.modal.show();\n      this.api.getUser(id).subscribe(data => {\n        this.currentUser = data;\n        this.currentUser.id = id;\n        this.initializeForm(this.currentUser);\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    initializeForm(currentUser) {\n      this.editUserForm = this.fb.group({\n        email: [currentUser.email, Validators.required],\n        password: [null, Validators.required],\n        state: [currentUser.state, Validators.required]\n      });\n    }\n\n    editUser() {\n      const editedUser = new User({\n        id: this.currentUser.id,\n        email: this.editUserForm.value.email,\n        password: this.editUserForm.value.password,\n        state: this.editUserForm.value.state\n      });\n      this.api.editUser(editedUser).subscribe(() => {\n        this.change.emit('user');\n        this.modal.hide();\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    transformInNumberArray(string) {\n      return JSON.parse('[' + string + ']');\n    }\n\n  }\n\n  EditUserModalComponent.ɵfac = function EditUserModalComponent_Factory(t) {\n    return new (t || EditUserModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  EditUserModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditUserModalComponent,\n    selectors: [[\"app-edit-user-modal\"]],\n    viewQuery: function EditUserModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"editUserModal\", \"aria-hidden\", \"true\", 1, \"row\", \"modal\", \"fade\", 3, \"onHide\"], [\"editUserModal\", \"bs-modal\"], [\"class\", \"col-md-6 col-sm-6 col-lg-4 mx-auto my-4\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-sm-6\", \"col-lg-4\", \"mx-auto\", \"my-4\"], [1, \"text-center\", \"border\", \"border-light\", \"p-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"h4\", \"mb-4\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"price\"], [\"type\", \"text\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", \"mb-4\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"mdbBtn\", \"\", \"color\", \"danger\", \"block\", \"true\", \"type\", \"submit\", 1, \"my-4\", 3, \"disabled\"]],\n    template: function EditUserModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onHide\", function EditUserModalComponent_Template_div_onHide_0_listener() {\n          return ctx.editUserForm.reset();\n        });\n        i0.ɵɵtemplate(2, EditUserModalComponent_div_2_Template, 15, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editUserForm);\n      }\n    },\n    styles: [\"form[_ngcontent-%COMP%]{background-color:#fff;border-radius:10px}label[_ngcontent-%COMP%]{float:left;font-size:16px;font-weight:400}\"]\n  });\n  return EditUserModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}