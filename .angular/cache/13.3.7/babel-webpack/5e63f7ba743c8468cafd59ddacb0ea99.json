{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../../shared/api.service';\nimport { Admin } from '../../shared/admin.model';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../shared/api.service\";\nimport * as i3 from \"ngx-bootstrap/modal\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"angular-bootstrap-md\";\nconst _c0 = [\"editAdminModal\"];\n\nfunction EditAdminModalComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function EditAdminModalComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.editAdmin();\n    });\n    i0.ɵɵelementStart(2, \"p\", 5);\n    i0.ɵɵtext(3, \"Edit Admin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 6);\n    i0.ɵɵtext(5, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementStart(7, \"label\", 8);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵelementStart(10, \"label\", 10);\n    i0.ɵɵtext(11, \"First\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 11);\n    i0.ɵɵelementStart(13, \"label\", 12);\n    i0.ɵɵtext(14, \"Last\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 13);\n    i0.ɵɵelementStart(16, \"label\", 14);\n    i0.ɵɵtext(17, \"Birth\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 15);\n    i0.ɵɵelementStart(19, \"label\", 16);\n    i0.ɵɵtext(20, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 17);\n    i0.ɵɵelementStart(22, \"label\", 18);\n    i0.ɵɵtext(23, \"State\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 19);\n    i0.ɵɵelementStart(25, \"button\", 20);\n    i0.ɵɵtext(26, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.editAdminForm);\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.editAdminForm.valid || ctx_r1.editAdminForm.pristine);\n  }\n}\n\nexport let EditAdminModalComponent = /*#__PURE__*/(() => {\n  class EditAdminModalComponent {\n    constructor(fb, api) {\n      this.fb = fb;\n      this.api = api;\n      this.change = new EventEmitter();\n      this.currentAdmin = new Admin();\n    }\n\n    show(id) {\n      this.modal.show();\n      this.api.getAdmin(id).subscribe(data => {\n        this.currentAdmin = data;\n        this.currentAdmin.id = id;\n        this.initializeForm(this.currentAdmin);\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    initializeForm(currentAdmin) {\n      this.editAdminForm = this.fb.group({\n        email: [currentAdmin.email, Validators.required],\n        password: [null, Validators.required],\n        first: [currentAdmin.first, Validators.required],\n        last: [currentAdmin.last, Validators.required],\n        birth: [currentAdmin.birth, Validators.required],\n        phone: [currentAdmin.phone, Validators.required],\n        state: [currentAdmin.state, Validators.required]\n      });\n    }\n\n    editAdmin() {\n      const editedAdmin = new Admin({\n        id: this.currentAdmin.id,\n        email: this.editAdminForm.value.email,\n        password: this.editAdminForm.value.password,\n        first: this.editAdminForm.value.first,\n        last: this.editAdminForm.value.last,\n        birth: this.editAdminForm.value.birth,\n        phone: this.editAdminForm.value.phone,\n        state: this.editAdminForm.value.state\n      });\n      this.api.editAdmin(editedAdmin).subscribe(() => {\n        this.change.emit('admin');\n        this.modal.hide();\n      }, error => {\n        console.log('err', error);\n      });\n    }\n\n    transformInNumberArray(string) {\n      return JSON.parse('[' + string + ']');\n    }\n\n  }\n\n  EditAdminModalComponent.ɵfac = function EditAdminModalComponent_Factory(t) {\n    return new (t || EditAdminModalComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  EditAdminModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditAdminModalComponent,\n    selectors: [[\"app-edit-admin-modal\"]],\n    viewQuery: function EditAdminModalComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modal = _t.first);\n      }\n    },\n    outputs: {\n      change: \"change\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"bsModal\", \"\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"editAdminModal\", \"aria-hidden\", \"true\", 1, \"row\", \"modal\", \"fade\", 3, \"onHide\"], [\"editAdminModal\", \"bs-modal\"], [\"class\", \"col-md-6 col-sm-6 col-lg-4 mx-auto my-4\", 4, \"ngIf\"], [1, \"col-md-6\", \"col-sm-6\", \"col-lg-4\", \"mx-auto\", \"my-4\"], [1, \"text-center\", \"border\", \"border-light\", \"p-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"h4\", \"mb-4\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"password\"], [\"type\", \"number\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", \"mb-4\"], [\"for\", \"first\"], [\"type\", \"text\", \"id\", \"first\", \"formControlName\", \"first\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"last\"], [\"type\", \"text\", \"id\", \"last\", \"formControlName\", \"last\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"birth\"], [\"type\", \"text\", \"id\", \"birth\", \"formControlName\", \"birth\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"phone\"], [\"type\", \"number\", \"id\", \"phone\", \"formControlName\", \"phone\", \"autocomplete\", \"off\", 1, \"form-control\", \"mb-4\"], [\"for\", \"state\"], [\"type\", \"text\", \"id\", \"state\", \"formControlName\", \"state\", \"autocomplete\", \"off\", 1, \"form-control\", \"novalidate\", \"mb-4\"], [\"mdbBtn\", \"\", \"color\", \"danger\", \"block\", \"true\", \"type\", \"submit\", 1, \"my-4\", 3, \"disabled\"]],\n    template: function EditAdminModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵlistener(\"onHide\", function EditAdminModalComponent_Template_div_onHide_0_listener() {\n          return ctx.editAdminForm.reset();\n        });\n        i0.ɵɵtemplate(2, EditAdminModalComponent_div_2_Template, 27, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.editAdminForm);\n      }\n    },\n    directives: [i3.ModalDirective, i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.NumberValueAccessor, i5.MdbBtnDirective],\n    styles: [\"form[_ngcontent-%COMP%]{background-color:#fff;border-radius:10px}label[_ngcontent-%COMP%]{float:left;font-size:16px;font-weight:400}\"]\n  });\n  return EditAdminModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}